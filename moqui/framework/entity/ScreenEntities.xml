<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->
<entities xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="../xsd/entity-definition-1.0.xsd">

    <!-- ========================================================= -->
    <!-- org.moqui.screen.dynform -->
    <!-- ========================================================= -->

    <entity entity-name="DynForm" package-name="org.moqui.screen.dynform">
        <field name="dynFormId" type="id" is-pk="true"/>
        <field name="dynFormName" type="text-medium"/>
        <field name="entityName" type="text-medium">
            <description>
                The name of an Entity to save responses to instead of DynFormResponseAnswer records.

                A DynFormResponse record will be created anyway to keep track of the key for the corresponding entity
                value and the userId and other response details.

                If any DynFormFields do not have an entityFieldName value they will be saved in DynFormResponseAnswer
                records as normal. If they do have an entityFieldName value the answer for that field will be saved
                there.
            </description>
        </field>
        <field name="description" type="text-long"/>
        <field name="submitCaption" type="text-short"/>
        <field name="submitService" type="text-long"/>
        <field name="isAnonymous" type="text-indicator">
            <description>Allow response to the dynForm without login?</description>
        </field>
        <field name="allowMultiple" type="text-indicator">
            <description>Allow multiple responses to this dynForm (if Y), or just a single answer (if N)?</description>
        </field>
        <field name="allowUpdate" type="text-indicator">
            <description>Allow change to responses?</description>
        </field>
        <field name="acroFormLocation" type="text-long">
            <description>Points to PDF with AcroForm</description>
        </field>
        <field name="modifyXmlForm" type="text-long">
            <description>The location and name (separated by a hash/pound sign) of an XML Form to modify.</description>
        </field>
        <field name="extendsDynFormId" type="id">
            <description>
                If specified this Dynamic Form extends the identified one, or in other words the identified form because
                a starting point for this Dynamic Form.
            </description>
        </field>
    </entity>
    <entity entity-name="DynFormPage" package-name="org.moqui.screen.dynform">
        <field name="dynFormId" type="id" is-pk="true"/>
        <field name="dynFormPageSeqId" type="id" is-pk="true"/>
        <field name="pageName" type="text-medium"/>
        <field name="sequenceNum" type="number-integer"/>
        <relationship type="one" related-entity-name="DynForm"/>
    </entity>
    <entity entity-name="DynFormField" package-name="org.moqui.screen.dynform">
        <field name="dynFormFieldId" type="id" is-pk="true"/>
        <field name="dynFormId" type="id"/>
        <field name="dynFormPageSeqId" type="id"/>
        <field name="sequenceNum" type="number-integer"/>
        <field name="fromDate" type="date-time"/>
        <field name="thruDate" type="date-time"/>
        <field name="entityFieldName" type="text-medium">
            <description>
                The name of an Entity Field to save responses to instead of DynFormResponseAnswer records.
                This is used along with the DynForm.entityName field.
            </description>
        </field>
        <field name="dynFormFieldTypeEnumId" type="id"/>
        <field name="description" type="text-long"/>
        <field name="question" type="text-very-long"/>
        <field name="hint" type="text-very-long"/>
        <field name="enumTypeId" type="id">
            <description>Get options from Enumeration entity.</description>
        </field>
        <field name="formatString" type="text-medium"/>
        <field name="requiredField" type="text-indicator"/>
        <field name="externalFieldRef" type="text-long">
            <description>External field ID/reference; for AcroForms used to track the field ID</description>
        </field>
        <field name="whenDynFormFieldId" type="id">
            <description>
                These two when* fields are used to specify that this question should only appear if the with option has
                been selected for the when question.
            </description>
        </field>
        <field name="whenDynFormOptionSeqId" type="id"/>
        <relationship type="one" related-entity-name="DynForm"/>
        <relationship type="one" related-entity-name="DynFormField"/>
        <relationship type="one" title="DynFormFieldType" related-entity-name="Enumeration">
            <description>(enumTypeId = DYNFORM_FIELD_TYPE)</description>
            <key-map field-name="dynFormFieldTypeEnumId"/>
        </relationship>
        <relationship type="one-nofk" related-entity-name="DynFormPage">
            <description>This does not have a foreign key because the dynFormId will never be null, and we want the
                dynFormPageSeqId to be optional.
            </description>
        </relationship>
        <relationship type="one" title="When" related-entity-name="DynFormFieldOption">
            <key-map field-name="whenDynFormFieldId" related-field-name="dynFormFieldId"/>
            <key-map field-name="whenDynFormOptionSeqId" related-field-name="dynFormOptionSeqId"/>
        </relationship>
        <relationship type="many" related-entity-name="Enumeration">
            <key-map field-name="enumTypeId"/>
        </relationship>
    </entity>
    <entity entity-name="DynFormFieldOption" package-name="org.moqui.screen.dynform">
        <field name="dynFormFieldId" type="id" is-pk="true"/>
        <field name="dynFormOptionSeqId" type="id" is-pk="true"/>
        <field name="description" type="text-long"/>
        <field name="sequenceNum" type="number-integer"/>
        <relationship type="one" related-entity-name="DynFormField"/>
    </entity>
    <entity entity-name="DynFormResponse" package-name="org.moqui.screen.dynform">
        <field name="dynFormResponseId" type="id" is-pk="true"/>
        <field name="dynFormId" type="id"/>
        <field name="userId" type="id"/>
        <field name="responseDate" type="date-time"/>
        <field name="lastModifiedDate" type="date-time"/>
        <field name="externalReferenceId" type="id-vlong"/>
        <field name="statusId" type="id"/>
        <field name="entityPrimaryKeyValue" type="text-very-long">
            <description>When the DynForm.entityName is used this is the primary key for the value.</description>
        </field>
        <relationship type="one" related-entity-name="UserAccount"/>
        <relationship type="one" related-entity-name="DynForm"/>
        <relationship type="one" related-entity-name="StatusItem"/>
    </entity>
    <entity entity-name="DynFormResponseAnswer" package-name="org.moqui.screen.dynform">
        <field name="dynFormResponseId" type="id" is-pk="true"/>
        <field name="dynFormFieldId" type="id" is-pk="true"/>
        <field name="booleanResponse" type="text-indicator"/>
        <field name="numericResponse" type="number-decimal"/>
        <field name="textResponse" type="text-very-long"/>
        <field name="dynFormOptionSeqId" type="id"/>
        <field name="contentLocation" type="id"/>
        <field name="answeredDate" type="date-time"/>
        <relationship type="one" related-entity-name="DynFormResponse"/>
        <relationship type="one" related-entity-name="DynFormField"/>
        <relationship type="one" related-entity-name="DynFormFieldOption"/>
    </entity>

    <!-- ========================================================= -->
    <!-- org.moqui.screen.dynscreen -->
    <!-- ========================================================= -->

    <entity entity-name="DynamicScreen" package-name="org.moqui.screen.dynscreen">
        <field name="screenId" type="id" is-pk="true"/>
        <field name="screenName" type="text-medium"/>
        <field name="userId" type="id-vlong">
            <description>These settings are per-user. To apply to all users set this to "_NA_".</description>
        </field>
        <field name="modifyXmlScreen" type="text-long">
            <description>The location and name (separated by a hash/pound sign) of XML Screen to modify.</description>
        </field>
    </entity>
    <entity entity-name="DynamicScreenInclude" package-name="org.moqui.screen.dynscreen">
        <field name="screenId" type="id" is-pk="true"/>
        <field name="includeSeqId" type="id" is-pk="true"/>
        <field name="sequenceNum" type="number-integer"/>
        <field name="panelSeqId" type="id"/>
        <field name="areaEnumId" type="id">
            <description>Options include: header, left, center, right, and footer.</description>
        </field>
        <field name="screenLocation" type="text-long"/>
    </entity>
    <entity entity-name="DynamicScreenIncludeParam" package-name="org.moqui.screen.dynscreen">
        <field name="screenId" type="id" is-pk="true"/>
        <field name="includeSeqId" type="id" is-pk="true"/>
        <field name="parameterName" type="text-medium" is-pk="true"/>
        <field name="parameterValue" type="text-long"/>
    </entity>
    <entity entity-name="DynamicScreenPanel" package-name="org.moqui.screen.dynscreen">
        <field name="screenId" type="id" is-pk="true"/>
        <field name="panelSeqId" type="id" is-pk="true"/>
        <field name="areaSizeUnit" type="id">
            <description>Options include: px, and em (defaults to px).</description>
        </field>
    </entity>
    <entity entity-name="DynamicScreenPanelArea" package-name="org.moqui.screen.dynscreen">
        <field name="screenId" type="id" is-pk="true"/>
        <field name="panelSeqId" type="id" is-pk="true"/>
        <field name="areaEnumId" type="id" is-pk="true">
            <description>Options include: header, left, center, right, and footer.</description>
        </field>
        <field name="areaSize" type="number-decimal"/>
        <field name="draggable" type="text-indicator">
            <description>Options include: Y or N, defaults to N.</description>
        </field>
    </entity>

    <!-- ========================================================= -->
    <!-- org.moqui.screen.subscreen -->
    <!-- ========================================================= -->

    <entity entity-name="SubscreensItem" package-name="org.moqui.screen.subscreen">
        <field name="screenLocation" type="id" is-pk="true"/>
        <field name="subscreenName" type="text-medium" is-pk="true"/>
        <field name="userId" type="id-vlong" is-pk="true">
            <description>These settings are per-user. To apply to all users set this to "_NA_".</description>
        </field>
        <field name="screenLocation" type="text-long"/>
        <field name="menuTitle" type="text-medium">
            <description>
                The title to show for this subscreen in the menu. Can be used to override subscreen titles in the
                screen.default-menu-title attribute and the subscreens-item.menu-title attribute.
            </description>
        </field>
        <field name="menuIndex" type="number-integer">
            <description>Insert this item in subscreens menu at this index (1-based).</description>
        </field>
        <field name="menuInclude" type="text-indicator">
            <description>
                Defaults to Y. Set to N to not include in the menu for the subscreens. This can be used to hide
                subscreens from the directory structure or even explicitly declared in the Screen XML file.
            </description>
        </field>
        <relationship type="one-nofk" related-entity-name="UserAccount">
            <description>No FK in order to allow externally authenticated users.</description>
        </relationship>
    </entity>

    <!-- ========================================================= -->
    <!-- org.moqui.screen.theme -->
    <!-- ========================================================= -->

    <entity entity-name="ScreenTheme" package-name="org.moqui.screen.theme">
        <field name="screenThemeId" type="id" is-pk="true"/>
        <field name="screenThemeTypeEnumId" type="id"/>
        <field name="description" type="text-long"/>
        <relationship type="one" title="ScreenThemeType" related-entity-name="Enumeration">
            <description>(enumTypeId = SCREEN_THEME_TYPE)</description>
            <key-map field-name="screenThemeTypeEnumId"/>
        </relationship>
    </entity>
    <entity entity-name="ScreenThemeResource" package-name="org.moqui.screen.theme">
        <field name="screenThemeId" type="id" is-pk="true"/>
        <field name="sequenceNum" type="number-integer" is-pk="true"/>
        <field name="resourceTypeEnumId" type="id"/>
        <field name="resourceValue" type="text-long">
            <description>The location, name or other value description the resource.</description>
        </field>
        <relationship type="one" related-entity-name="ScreenTheme"/>
        <relationship type="one" title="ResourceType" related-entity-name="Enumeration">
            <description>(enumTypeId = SCREEN_THEME_RESTP)</description>
            <key-map field-name="resourceTypeEnumId" related-field-name="enumId"/>
        </relationship>
    </entity>
</entities>
