<?xml version="1.0" encoding="UTF-8" ?>
<!-- No copyright or license for configuration file, details here are not considered a creative work. -->
<moqui-conf xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/moqui-conf-1.0.xsd">

    <!-- Settings in this file can be overridden in a runtime file that has a any of the desired sub-elements. -->
    <!-- TODO: (worth doing?) Settings can also be overridden with similar nodes in the JCR under the "" node in the "" repository. -->

    <cache-list>
        <!-- Production mode by default - No expiration of conf and impl artifacts. -->
        <cache name="entity.definition" expire-time-idle="0" expire-time-live="0" max-elements="0"/>
        <cache name="entity.location" expire-time-idle="0" expire-time-live="0" max-elements="0"/>

        <cache name="service.location" expire-time-idle="0" expire-time-live="0" max-elements="0"/>
        <cache name="service.java.class" expire-time-idle="0" expire-time-live="0" max-elements="0"/>

        <cache name="screen.location" expire-time-idle="0" expire-time-live="0" max-elements="0"/>

        <cache name="script.xml-actions.location" expire-time-idle="0" expire-time-live="0" max-elements="0"/>
        <cache name="script.groovy.location" expire-time-idle="0" expire-time-live="0" max-elements="0"/>

        <cache name="template.ftl.location" expire-time-idle="0" expire-time-live="0" max-elements="0"/>
    </cache-list>
    <server-stats bin-length-seconds="900" proxy-enabled="false" visit-persist="true" visitor-persist="true">
        <artifact-stats type="screen" track-bin="true" persist-bin="true" persist-hit="true"/>
        <artifact-stats type="transition" track-bin="true" persist-bin="false" persist-hit="false"/>
        <artifact-stats type="service" track-bin="true" persist-bin="false" persist-hit="false"/>
        <artifact-stats type="entity" track-bin="true" persist-bin="false" persist-hit="false"/>
    </server-stats>
    
    <webapp-list>
        <!-- The webapp.@moqui-name attribute value is looked up based on the value of the moqui-name context-param in
        the web.xml file. This configuration will allow the framework to do various things for that webapp. -->
        <webapp moqui-name="webroot"
                http-port="8080" http-force-host=""
                https-port="8443" https-force-host="" https-enabled="true"
                content-prefix-secure="" content-prefix-standard=""
                cookie-domain="">

            <first-hit-in-visit>
                <actions></actions>
            </first-hit-in-visit>
            <after-request>
                <actions></actions>
            </after-request>
            <before-request>
                <actions></actions>
            </before-request>
            <after-login>
                <actions></actions>
            </after-login>
            <before-logout>
                <actions></actions>
            </before-logout>

            <root-screen location="webroot/MoquiRoot.xml"/>
        </webapp>
    </webapp-list>

    <transaction-facade>
        <!-- if this is not present the default JNDI server will be used -->
        <!-- <server-jndi context-provider-url="rmi://127.0.0.1:1099"
                     initial-context-factory="com.sun.jndi.rmi.registry.RegistryContextFactory"
                     url-pkg-prefixes="java.naming.rmi.security.manager"
                     security-principal="" security-credentials=""/> -->

        <!-- Use this one for the internal transaction manager -->
        <transaction-factory factory-type="internal"/>

        <!-- Use this one for getting the JTA objects from JNDI -->
        <!-- <transaction-factory factory-type="jndi" transaction-manager-jndi-name="java:comp/UserTransaction"
                             user-transaction-jndi-name="java:comp/UserTransaction"/> -->
        <!-- UserTransaction JNDI name for most servers: java:comp/UserTransaction (most servers: Resin, Orion, OC4J, etc)
            JBoss (separate objects): "java:comp/UserTransaction" and "java:comp/TransactionManager"
        -->
    </transaction-facade>

    <screen-facade boundary-comments="true" default-autocomplete-rows="20" default-paginate-rows="20">
        <screen-text-output type="text" mime-type="text/plain"
                            macro-template-location="template/screen-macro/ScreenTextMacros.ftl"/>
        <screen-text-output type="cwiki" mime-type="text/plain"
                            macro-template-location="template/screen-macro/ScreenCwikiMacros.ftl"/>
        <screen-text-output type="html" mime-type="text/html"
                            macro-template-location="template/screen-macro/ScreenHtmlMacros.ftl"/>
        <screen-text-output type="xhtml" mime-type="text/xhtml"
                            macro-template-location="template/screen-macro/ScreenHtmlMacros.ftl"/>
        <screen-text-output type="xsl-fo" mime-type="text/xml"
                            macro-template-location="template/screen-macro/ScreenXslFoMacros.ftl"/>
        <screen-text-output type="xml" mime-type="text/xml"
                            macro-template-location="template/screen-macro/ScreenXmlMacros.ftl"/>
        <screen-text-output type="csv" mime-type="text/csv"
                            macro-template-location="template/screen-macro/ScreenCsvMacros.ftl"/>
    </screen-facade>

    <service-facade>
        <!-- NOTE: service jobs are managed using Quartz Scheduler, see quartz configuration for more details -->
        <thread-pool send-to-pool="default">
            <run-from-pool name="default"/>
        </thread-pool>

        <service-location name="main-rmi" location="rmi://localhost:1099/RMIDispatcher"/>
        <service-location name="main-http" location="http://localhost:8080/webtools/control/httpService"/>

        <service-location name="entity-sync-rmi" location="rmi://localhost:1099/RMIDispatcher"/>
        <service-location name="entity-sync-http" location="http://localhost:8080/webtools/control/httpService"/>

        <!-- runner-class needs to implement the org.moqui.impl.service.ServiceRunner interface -->
        <!-- this is just an example, no need to declare the java service-type because it is internal:
        <service-type name="java" runner-class="org.moqui.impl.service.runner.JavaServiceRunner"/>
        -->

        <!-- Start-Up Services -->
        <!--
           - runtime-data-id refers to the RuntimeData entity for in-parameters
           - runtime-delay is the milliseconds after startup this service should run
           - run-in-pool is the name of the pool to run the job in; defaults to the send-to-poll (above)

        <startup-service name="testScv" runtime-data-id="9900" runtime-delay="0" run-in-pool="pool"/>
        -->

        <!-- JMS ServiceFacade Queue/Topic Configuration -->
        <!--
        <jms-service name="serviceMessenger" send-mode="all">
            <server-jndi context-provider-url="rmi://127.0.0.1:1099"
                         initial-context-factory="com.sun.jndi.rmi.registry.RegistryContextFactory"
                         url-pkg-prefixes="java.naming.rmi.security.manager"
                         security-principal="" security-credentials=""/>
            <server-jms jndi-name="jms/TopicConnectionFactory"
                        topic-queue-name="jms/MyTopic" type="topic"
                        username="admin" password="admin"
                        listen="true"/>
        </jms-service>
        -->
    </service-facade>

    <entity-facade default-group-name="transactional" distributed-cache-clear-enabled="false"
                   entity-eca-enabled="true" sequenced-id-prefix="">
        <!-- if this is not present the default JNDI server will be used -->
        <!-- <server-jndi context-provider-url="rmi://127.0.0.1:1099"
                     initial-context-factory="com.sun.jndi.rmi.registry.RegistryContextFactory"
                     url-pkg-prefixes="java.naming.rmi.security.manager"
                     security-principal="" security-credentials=""/> -->

        <!--
        The configurations below will use the XADataSource directly to connect, which is required for proper
        transaction handling with multiple data sources.

        For details about WHY to do it this way see:
        http://www.atomikos.com/Documentation/NonXaDataSource#Caveats

        For details about properties for different databases see:
         http://www.atomikos.com/Documentation/ConfiguringTransactionsEssentials

        To use the non-XA variety just specify the normal JDBC parameters (like jdbc-uri, etc) and leave out the
        xa-properties element. If the xa-properties element is present the normal JDBC parameters will be ignored.
        -->
        <datasource group-name="transactional" database-conf-name="derby" schema-name="MOQUI">
            <inline-jdbc pool-minsize="5" pool-maxsize="50">
                <xa-properties databaseName="${moqui.runtime}/db/derby/MoquiTransactional"/>
            </inline-jdbc>
            <!-- <inline-jdbc jdbc-uri="jdbc:derby:MoquiTransactional;create=true"
                         jdbc-username="moqui" jdbc-password="moqui"
                         pool-minsize="5" pool-maxsize="50"/> -->
            <!-- <jndi-jdbc jndi-name="java:/MoquiTransactionalDataSource"/> -->
        </datasource>
        <datasource group-name="analytical" database-conf-name="derby" schema-name="MOQUI">
            <inline-jdbc pool-minsize="2" pool-maxsize="10">
                <xa-properties databaseName="${moqui.runtime}/db/derby/MoquiAnalytical"/>
            </inline-jdbc>
            <!-- <inline-jdbc jdbc-uri="jdbc:derby:MoquiAnalytical;create=true"
                         jdbc-username="moqui" jdbc-password="moqui"
                         pool-minsize="2" pool-maxsize="10"/> -->
            <!-- <jndi-jdbc jndi-name="java:/MoquiAnalyticalDataSource"/> -->
        </datasource>
        <datasource group-name="tenantcommon" database-conf-name="derby" schema-name="MOQUI">
            <inline-jdbc pool-minsize="2" pool-maxsize="10">
                <xa-properties databaseName="${moqui.runtime}/db/derby/MoquiTenant"/>
            </inline-jdbc>
            <!-- <inline-jdbc jdbc-uri="jdbc:derby:MoquiTenant;create=true"
                         jdbc-username="moqui" jdbc-password="moqui"
                         pool-minsize="2" pool-maxsize="10"/> -->
            <!-- <jndi-jdbc jndi-name="java:/MoquiTenantDataSource"/> -->
        </datasource>

        <!-- some examples of how other databases would be configured -->
        <!-- PostgreSQL
        <datasource group-name="transactional" database-conf-name="postgres" schema-name="public">
            <inline-jdbc pool-minsize="5" pool-maxsize="50">
                <xa-properties user="moqui" password="moqui" serverName="localhost" portNumber="5432"
                               databaseName="MoquiTransactional"/>
            </inline-jdbc>
            <!- - <inline-jdbc jdbc-uri="jdbc:postgresql://127.0.0.1/MoquiTransactional"
                    jdbc-username="moqui" jdbc-password="moqui"
                    pool-minsize="2" pool-maxsize="50"/> - ->
        </datasource>
        -->
        <!-- MySQL
        <datasource group-name="transactional" database-conf-name="mysql"
                    check-pks-on-start="false">
            <inline-jdbc jdbc-uri="jdbc:mysql://127.0.0.1/MoquiTransactional?autoReconnect=true"
                    jdbc-username="moqui" jdbc-password="moqui"
                    pool-minsize="2" pool-maxsize="50"/>
        </datasource>
        -->
        <!-- Oracle
        <datasource group-name="transactional" database-conf-name="oracle" schema-name="MOQUI">
            <inline-jdbc jdbc-uri="jdbc:oracle:thin:@127.0.0.1:1521:MoquiTransactional"
                    jdbc-username="moqui" jdbc-password="moqui"
                    pool-minsize="2" pool-maxsize="50"/>
        </datasource>
        -->

        <!-- Refer to these explicitly instead of by directory name convention as is done in components.
             There is no reliable way to search within directories on the classpath (if in a file or jar is fine, but
             not in a war/ear file or from special ClassLoaders) -->
        <load-entity location="classpath://entity/BasicEntities.xml"/>
        <load-entity location="classpath://entity/EntityEntities.xml"/>
        <load-entity location="classpath://entity/OlapEntities.xml"/>
        <load-entity location="classpath://entity/ScreenEntities.xml"/>
        <load-entity location="classpath://entity/SecurityEntities.xml"/>
        <load-entity location="classpath://entity/ServerEntities.xml"/>
        <load-entity location="classpath://entity/ServiceEntities.xml"/>
        <load-entity location="classpath://entity/TenantEntities.xml"/>

        <load-data location="classpath://data/BasicTypeData.xml"/>
        <load-data location="classpath://data/CommonL10nData.xml"/>
        <load-data location="classpath://data/EntityTypeData.xml"/>
        <load-data location="classpath://data/ScreenTypeData.xml"/>
        <load-data location="classpath://data/SecurityTypeData.xml"/>
        <load-data location="classpath://data/ServerTypeData.xml"/>
        <load-data location="classpath://data/ServiceTypeData.xml"/>
        <load-data location="classpath://data/TenantTypeData.xml"/>
        <load-data location="classpath://data/UnitTypeData.xml"/>
    </entity-facade>
    <database-list>
        <!-- Data Type Dictionary Types Available:
            id                String
            id-long           String
            id-vlong          String
            date              Date
            time              Time
            date-time         Timestamp
            number-integer    Long
            number-decimal    BigDecimal
            number-float      Double
            currency-amount   BigDecimal
            currency-precise  BigDecimal
            text-indicator    String
            text-short        String
            text-medium       String
            text-long         String
            text-very-long    String
            binary-very-long  Blob
        -->

        <database name="derby"
                  use-pk-constraint-names="false"
                  use-indices-unique="false"
                  default-isolation-level="ReadCommitted"
                  default-jdbc-driver="org.apache.derby.jdbc.EmbeddedDriver"
                  default-xa-ds-class="org.apache.derby.jdbc.EmbeddedXADataSource">
            <field-type-def type="id" sql-type="VARCHAR(20)"/>
            <field-type-def type="id-long" sql-type="VARCHAR(60)"/>
            <field-type-def type="id-vlong" sql-type="VARCHAR(255)"/>

            <field-type-def type="date" sql-type="DATE"/>
            <field-type-def type="time" sql-type="TIME"/>
            <field-type-def type="date-time" sql-type="TIMESTAMP"/>

            <field-type-def type="number-integer" sql-type="NUMERIC(20,0)"/>
            <field-type-def type="number-decimal" sql-type="NUMERIC(20,6)"/>
            <field-type-def type="number-float" sql-type="DOUBLE"/>

            <field-type-def type="currency-amount" sql-type="NUMERIC(20,2)"/>
            <field-type-def type="currency-precise" sql-type="NUMERIC(20,3)"/>

            <field-type-def type="text-indicator" sql-type="CHAR(1)"/>
            <field-type-def type="text-short" sql-type="VARCHAR(10)"/>
            <field-type-def type="text-medium" sql-type="VARCHAR(100)"/>
            <field-type-def type="text-long" sql-type="VARCHAR(255)"/>
            <field-type-def type="text-very-long" sql-type="CLOB"/>

            <field-type-def type="binary-very-long" sql-type="BLOB"/>
        </database>
        <database name="hsql"
                  use-foreign-keys="true"
                  use-foreign-key-indices="true"
                  use-fk-initially-deferred="false"
                  join-style="ansi-no-parenthesis"
                  default-isolation-level="ReadUncommitted"
                  default-jdbc-driver="org.hsqldb.jdbcDriver">
            <field-type-def type="id" sql-type="VARCHAR"/>
            <field-type-def type="id-long" sql-type="VARCHAR"/>
            <field-type-def type="id-vlong" sql-type="VARCHAR"/>

            <field-type-def type="date" sql-type="DATE"/>
            <field-type-def type="time" sql-type="TIME"/>
            <field-type-def type="date-time" sql-type="TIMESTAMP"/>

            <field-type-def type="number-integer" sql-type="BIGINT"/>
            <field-type-def type="number-decimal" sql-type="DOUBLE"/>
            <field-type-def type="number-float" sql-type="DOUBLE"/>

            <field-type-def type="currency-amount" sql-type="DOUBLE"/>
            <field-type-def type="currency-precise" sql-type="DOUBLE"/>

            <field-type-def type="text-indicator" sql-type="CHAR"/>
            <field-type-def type="text-short" sql-type="VARCHAR"/>
            <field-type-def type="text-medium" sql-type="VARCHAR"/>
            <field-type-def type="text-long" sql-type="VARCHAR"/>
            <field-type-def type="text-very-long" sql-type="VARCHAR"/>

            <field-type-def type="binary-very-long" sql-type="OBJECT" sql-type-alias="OTHER"/>
        </database>
        <database name="mysql"
                  use-foreign-keys="true"
                  join-style="ansi-no-parenthesis"
                  drop-fk-use-foreign-key-keyword="true"
                  table-type="InnoDB"
                  character-set="latin1"
                  collate="latin1_general_cs"
                  default-isolation-level="ReadCommitted"
                  default-jdbc-driver="com.mysql.jdbc.Driver">
            <field-type-def type="id" sql-type="VARCHAR(20)"/>
            <field-type-def type="id-long" sql-type="VARCHAR(60)"/>
            <field-type-def type="id-vlong" sql-type="VARCHAR(255)"/>

            <field-type-def type="date" sql-type="DATE"/>
            <field-type-def type="time" sql-type="TIME"/>
            <field-type-def type="date-time" sql-type="TIMESTAMP"/>

            <field-type-def type="number-integer" sql-type="DECIMAL(20,0)"/>
            <field-type-def type="number-decimal" sql-type="DECIMAL(20,6)"/>
            <field-type-def type="number-float" sql-type="DECIMAL(20,12)"/>

            <field-type-def type="currency-amount" sql-type="DECIMAL(20,2)"/>
            <field-type-def type="currency-precise" sql-type="DECIMAL(20,3)"/>

            <field-type-def type="text-indicator" sql-type="CHAR(1)"/>
            <field-type-def type="text-short" sql-type="VARCHAR(10)"/>
            <field-type-def type="text-medium" sql-type="VARCHAR(100)"/>
            <field-type-def type="text-long" sql-type="VARCHAR(255)"/>
            <field-type-def type="text-very-long" sql-type="LONGTEXT"/>

            <field-type-def type="binary-very-long" sql-type="LONGBLOB"/>
        </database>
        <database name="oracle"
                  join-style="ansi"
                  default-isolation-level="ReadCommitted"
                  default-jdbc-driver="oracle.jdbc.driver.OracleDriver"
                  default-xa-ds-class="oracle.jdbc.xa.client.OracleXADataSource">
            <field-type-def type="id" sql-type="VARCHAR2(20)"/>
            <field-type-def type="id-long" sql-type="VARCHAR2(60)"/>
            <field-type-def type="id-vlong" sql-type="VARCHAR2(255)"/>

            <field-type-def type="date" sql-type="DATE"/>
            <field-type-def type="time" sql-type="TIME"/>
            <field-type-def type="date-time" sql-type="TIMESTAMP"/>

            <field-type-def type="number-integer" sql-type="NUMBER(20,0)"/>
            <field-type-def type="number-decimal" sql-type="NUMBER(20,6)"/>
            <field-type-def type="number-float" sql-type="NUMBER(20,12)"/>

            <field-type-def type="currency-amount" sql-type="NUMBER(20,2)"/>
            <field-type-def type="currency-precise" sql-type="NUMBER(20,3)"/>

            <field-type-def type="text-indicator" sql-type="CHAR(1)"/>
            <field-type-def type="text-short" sql-type="VARCHAR2(10)"/>
            <field-type-def type="text-medium" sql-type="VARCHAR2(100)"/>
            <field-type-def type="text-long" sql-type="VARCHAR2(255)"/>
            <field-type-def type="text-very-long" sql-type="CLOB"/>

            <field-type-def type="binary-very-long" sql-type="BLOB"/>
        </database>
        <database name="postgres"
                  use-fk-initially-deferred="false"
                  join-style="ansi"
                  result-fetch-size="50"
                  use-binary-type-for-blob="true"
                  default-isolation-level="ReadCommitted"
                  default-jdbc-driver="org.postgresql.Driver"
                  default-xa-ds-class="org.postgresql.xa.PGXADataSource">
            <field-type-def type="id" sql-type="TEXT"/>
            <field-type-def type="id-long" sql-type="TEXT"/>
            <field-type-def type="id-vlong" sql-type="TEXT"/>

            <field-type-def type="date" sql-type="DATE"/>
            <field-type-def type="time" sql-type="TIME"/>
            <field-type-def type="date-time" sql-type="TIMESTAMP"/>

            <field-type-def type="number-integer" sql-type="NUMERIC(20,0)"/>
            <field-type-def type="number-decimal" sql-type="NUMERIC(20,6)"/>
            <field-type-def type="number-float" sql-type="FLOAT8"/>

            <field-type-def type="currency-amount" sql-type="NUMERIC(20,2)"/>
            <field-type-def type="currency-precise" sql-type="NUMERIC(20,3)"/>

            <field-type-def type="text-indicator" sql-type="CHAR(1)"/>
            <field-type-def type="text-short" sql-type="TEXT"/>
            <field-type-def type="text-medium" sql-type="TEXT"/>
            <field-type-def type="text-long" sql-type="TEXT"/>
            <field-type-def type="text-very-long" sql-type="TEXT"/>

            <field-type-def type="binary-very-long" sql-type="BYTEA"/>
        </database>
    </database-list>
    <repository-list>
        <!-- this path is relative to the active Moqui runtime directory; start with a forward-slash for an absolute path -->
        <repository name="default" location="rep/jackrabbit" type="local" workspace="default"/>

        <!-- <repository name="default" location="http://localhost:8081/rmi" type="rmi" workspace="default"/> -->
        <!-- <repository name="default" location="java:comp/env/jcr/repository" type="jndi" workspace="default"/> -->
    </repository-list>
</moqui-conf>
