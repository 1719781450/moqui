<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2010 David E. Jones

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-1.0.xsd"
        default-menu-title="Example" default-menu-index="1">
    <parameter name="exampleId"/>
    <transition name="createExample">
        <actions><call-service service-name="createExample" auto-in-map="true"/></actions>
        <transition-response url="EditExample"/>
    </transition>
    <transition name="updateExample">
        <actions><call-service service-name="updateExample" auto-in-map="true"/></actions>
        <transition-response url="EditExample"/>
    </transition>

    <section>
        <actions>
            <entity-find-one entity-name="Example" value-field="example"/>
            <entity-find-one entity-name="StatusItem" value-field="currentStatus">
                <field-map field-name="statusId" from-field="example.statusId"/>
            </entity-find-one>
        </actions>
        <widgets>
            <section name="create">
                <condition><compare field="example" operator="empty"/></condition>
                <widgets>
                    <form name="CreateExample" type="single" transition="createExample" default-map-name="example">
                        <auto-fields-service service-name="createExample"/>

                        <field name="exampleId" title="Example ID">
                            <conditional>
                                <!-- the condition -> expression element evaluates as a groovy boolean expression,
                                 so this will see if the exampleId String is not null and length > 0 -->
                                <condition><expression>exampleId</expression></condition>
                                <display text="Not Found: [${exampleId}]" also-hidden="false"/>
                            </conditional>
                        </field>

                        <field name="exampleTypeId" title="Type">
                            <drop-down allow-empty="false">
                                <!-- this is a neat feature, but not good for the type because the user would have to know the possible types in order to enter at least the first letter, so leaving it out by default; just uncomment to enable: <auto-complete/> -->
                                <entity-options entity-name="ExampleType" text="${description}">
                                    <order-by field-name="description"/>
                                </entity-options>
                            </drop-down>
                        </field>
                        <field name="statusId" title="Status">
                            <drop-down allow-empty="false">
                                <entity-options entity-name="ExampleStatusItem" text="${description}"/>
                            </drop-down>
                        </field>
                        <field name="description" title="Description"/>
                        <field name="longDescription" title="Long Description"/>
                        <!-- uncomment the Example.anotherText field too in order to try this
                        <field name="anotherText">
                            <drop-down allow-empty="true">
                                <option key="Explicit Option" text="Explicit Option"/>
                                <entity-options entity-name="ExampleType" text="${description}" key-field="exampleTypeId">
                                    <order-by field-name="description"/>
                                </entity-options>
                            </drop-down>
                        </field>
                        -->

                        <field name="submitButton" title="Create"><submit button-type="button"/></field>
                    </form>
                </widgets>
            </section>
            <section name="update">
                <condition><compare field="example" operator="not-empty"/></condition>
                <widgets>
                    <form name="UpdateExample" extends="CreateExample" transition="updateExample">
                        <field name="exampleId" title="Example ID"><display/></field>
                        <field name="statusId" title="Status">
                            <drop-down allow-empty="false" current-description="${currentStatus.description}">
                                <entity-options entity-name="StatusValidChangeToDetail" key-field="statusIdTo" text="${transitionName} (${description})">
                                    <condition-expr field-name="statusId" from-field="example.statusId"/>
                                </entity-options>
                            </drop-down>
                        </field>
                        <!-- uncomment the Example.anotherText field too in order to try this
                        <field name="displayAnotherText">
                            <conditional>
                                <condition><compare field="example.anotherText" operator="not-empty"/></condition>
                                <display text="${example.anotherText}"/>
                            </conditional>
                        </field>
                        -->
                        <field name="submitButton" title="Update"><submit button-type="button"/></field>
                    </form>
                </widgets>
            </section>
        </widgets>
    </section>
</screen>
