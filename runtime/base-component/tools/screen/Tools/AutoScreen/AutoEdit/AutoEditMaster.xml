<?xml version="1.0" encoding="UTF-8"?>
<!--
This is free and unencumbered software released into the public domain.
For specific language governing permissions and limitations refer to
the LICENSE.md file or http://unlicense.org
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-1.5.xsd"
        default-menu-title="Edit" default-menu-index="3">

    <parameter name="aen" required="true"/><!-- Auto Entity Name -->
    <parameter name="den"/><!-- Detail Entity Name -->

    <transition name="list"><default-response url="../../MainEntityList"/></transition>
    <transition name="find"><default-response url="../../AutoFind"/></transition>
    <transition name="edit"><default-response url="."/></transition>
    <transition name="update">
        <actions><service-call name="update#${aen}" in-map="true"/></actions>
        <default-response url="." parameter-map="ec.entity.getEntityDefinition(aen).getPrimaryKeys(context)"/>
    </transition>
    <transition name="export">
        <actions>
            <entity-find-one entity-name="${aen}" value-field="entityValue"/>
            <script><![CDATA[
                import org.moqui.context.ExecutionContext
                import org.moqui.entity.EntityDataWriter

                ExecutionContext ec = context.ec
                int valuesWritten = ec.entity.makeDataWriter().dependentLevels((dependentLevels ?: '2') as int)
                        .fileType(fileType == 'JSON' ? EntityDataWriter.JSON : EntityDataWriter.XML)
                        .entityName(aen).filterMap(entityValue.getPrimaryKeys()).file(filename)

                /* old approach not using EntityDataWriter:
                File outFile = new File(filename)
                if (!outFile.createNewFile()) {
                    ec.message.addError("File ${filename} already exists.")
                } else {
                    PrintWriter pw = new PrintWriter(outFile)
                    pw.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>")
                    pw.println("<entity-facade-xml>")
                    int valuesWritten = entityValue.writeXmlText(pw, null, (dependentLevels ?: '2') as int)
                    pw.println("</entity-facade-xml>")
                    pw.close()
                    ec.message.addMessage("Wrote ${valuesWritten} records to file ${filename}")
                }
                */
                ]]></script>
        </actions>
        <default-response url="." parameter-map="ec.entity.getEntityDefinition(aen).getPrimaryKeys(context)"/>
    </transition>
    <transition name="getFormXml">
        <actions><script><![CDATA[
            StringWriter xmlWriter = new StringWriter()
            XmlNodePrinter printer = new XmlNodePrinter(new PrintWriter(xmlWriter))
            xmlWriter.append('<?xml version="1.0" encoding="UTF-8"?>\n')

            Node screenNode = new Node(null, "screen", ["xmlns:xsi":"http://www.w3.org/2001/XMLSchema-instance", "xsi:noNamespaceSchemaLocation":"http://moqui.org/xsd/xml-screen-1.5.xsd"])
            Node updateTransNode = screenNode.appendNode("transition", [name:"update"])
            updateTransNode.appendNode("service-call", [name:"update#${aen}"])
            updateTransNode.appendNode("default-response", [url:"."])

            Node actionsNode = screenNode.appendNode("actions")
            actionsNode.appendNode("entity-find-one", ["entity-name":aen, "value-field":"fieldValues"])
            Node widgetsNode = screenNode.appendNode("widgets")
            widgetsNode.append(sri.getActiveScreenDef().getForm("UpdateMasterEntityValue").getAutoCleanedNode())
            printer.print(screenNode)

            ec.web.sendTextResponse(xmlWriter.toString())
        ]]></script></actions>
        <default-response type="none"/>
    </transition>

    <actions>
        <entity-find-one entity-name="${aen}" value-field="fieldValues"/>
    </actions>
    <widgets>
        <container>
            <link url="list" text="Entity List" link-type="hidden-form"/>
            <link url="find" text="Find ${ec.entity.getEntityDefinition(aen).getPrettyName(null, null)}" link-type="hidden-form"/>
        </container>
        <form-single name="UpdateMasterEntityValue" transition="update" dynamic="true">
            <auto-fields-entity entity-name="${aen}" include="pk" field-type="display"/>
            <auto-fields-entity entity-name="${aen}" include="nonpk" field-type="edit"/>
            <field name="aen"><default-field><hidden/></default-field></field>
            <field name="submitButton"><default-field title="Update"><submit/></default-field></field>
        </form-single>
        <form-single name="ExportMasterEntity" transition="export" dynamic="true">
            <auto-fields-entity entity-name="${aen}" include="pk" field-type="hidden"/>
            <field name="aen"><default-field><hidden/></default-field></field>
            <field name="filename"><default-field><text-line size="60"/></default-field></field>
            <field name="dependentLevels"><default-field><text-line size="2" default-value="2"/></default-field></field>
            <field name="fileType"><default-field>
                <radio no-current-selected-key="XML"><option key="XML"/><option key="JSON"/></radio>
            </default-field></field>
            <field name="submitButton"><default-field title="Export"><submit/></default-field></field>
            <field-layout><field-row-big><field-ref name="aen"/><field-ref name="filename"/>
                <field-ref name="dependentLevels"/><field-ref name="fileType"/><field-ref name="submitButton"/>
            </field-row-big></field-layout>
        </form-single>
        <link url="getFormXml" text="Get Form XML" link-type="hidden-form-link" target-window="_blank"/>
    </widgets>
</screen>
