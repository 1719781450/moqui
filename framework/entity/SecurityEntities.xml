<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->
<entities xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/entity-definition-1.0.xsd">

    <!-- ========================================================= -->
    <!-- moqui.security.artifact -->
    <!-- ========================================================= -->

    <entity entity-name="ArtifactGroup" package-name="moqui.security.artifact">
        <field name="artifactGroupId" type="id" is-pk="true"/>
        <field name="description" type="text-medium"/>
    </entity>
    <entity entity-name="ArtifactGroupMember" package-name="moqui.security.artifact">
        <field name="artifactGroupId" type="id" is-pk="true"/>
        <field name="artifactName" type="text-long" is-pk="true">
            <description>Full artifact location/name, or a pattern if nameIsPattern=Y.</description>
        </field>
        <field name="artifactTypeEnumId" type="id" is-pk="true"/>
        <field name="nameIsPattern" type="text-indicator"/>
        <field name="inheritAuthz" type="text-indicator">
            <description>If Y then the user will have authorization for anything called by the artifact.
                If N user will need to have authorization for anything else called by the artifact.

                Note that in some cases (like in screen-sets) inheritance in the other direction is on by default, or
                in other words permission to access an artifact implies permission to access everything needed to get
                to that artifact.

                Defaults to Y. 
            </description>
        </field>
        <relationship type="one" related-entity-name="ArtifactGroup"/>
        <relationship type="one" title="ArtifactType" related-entity-name="Enumeration">
            <key-map field-name="artifactTypeEnumId"/>
        </relationship>
    </entity>

    <!-- ========================================================= -->
    <!-- moqui.security.authz -->
    <!-- ========================================================= -->

    <entity entity-name="ArtifactAuthz" package-name="moqui.security.authz">
        <description>If an artifact in the group specified is accessed by any user in the AuthzGroup maxHitsCount
            times in maxHitsDuration seconds then the user/artifact will be blocked fir tarputDuration seconds.
        </description>
        <field name="artifactAuthzId" type="id" is-pk="true"/>
        <field name="userGroupId" type="id"/>
        <field name="artifactGroupId" type="id"/>
        <field name="authzTypeEnumId" type="id"/>
        <field name="authzActionEnumId" type="id"/>
        <field name="authzServiceName" type="text-medium">
            <description>If specified this service will be called and it should return a authzTypeEnumId with the
                result of the authorization.
                Will try to pass the following fields to this service: userId, authzActionEnumId,  artifactTypeEnumId,
                and artifactName. The service will also have access to the ArtifactExecutionFacade (ec.artifactExecution)
                which you can use to get the current artifact stack, etc.
                The service must pass back a authzTypeEnumId (AUTHZT_ALLOW, AUTHZT_ALWAYS, or AUTHZT_DENY).
            </description>
        </field>
        <relationship type="one" related-entity-name="UserGroup"/>
        <relationship type="one" related-entity-name="ArtifactGroup"/>
        <relationship type="one" title="AuthzType" related-entity-name="Enumeration">
            <key-map field-name="authzTypeEnumId"/>
        </relationship>
        <relationship type="one" title="AuthzAction" related-entity-name="Enumeration">
            <key-map field-name="authzActionEnumId"/>
        </relationship>
    </entity>
    <entity entity-name="ArtifactAuthzFailure" package-name="moqui.security.authz" cache="false">
        <field name="failureId" type="text-long" is-pk="true"/>
        <field name="artifactName" type="text-long"/>
        <field name="artifactTypeEnumId" type="id"/>
        <field name="authzActionEnumId" type="id"/>
        <field name="userId" type="id-very-long"/>
        <field name="failureDate" type="date-time"/>
        <field name="isDeny" type="text-indicator"/>
        <relationship type="one" title="ArtifactType" related-entity-name="Enumeration">
            <key-map field-name="artifactTypeEnumId"/>
        </relationship>
        <relationship type="one" title="AuthzAction" related-entity-name="Enumeration">
            <key-map field-name="authzActionEnumId"/>
        </relationship>
        <relationship type="one-nofk" related-entity-name="UserAccount">
            <description>No FK in order to allow externally authenticated users.</description>
        </relationship>
    </entity>
    <entity entity-name="ArtifactAuthzRecord" package-name="moqui.security.authz">
        <field name="artifactAuthzId" type="id" is-pk="true"/>
        <field name="viewEntityName" type="text-medium"/>
        <field name="filterByDate" type="text-indicator"/>
        <field name="filterByDateFromField" type="text-medium"/>
        <field name="filterByDateThruField" type="text-medium"/>
        <field name="userIdField" type="text-medium">
            <description>Will lookup in viewEntityName view-entity for the currently logged in userId, and
                if this field is set it will use this field name to match against, otherwise it will automatically
                use the userId field in the view-entity.
            </description>
        </field>
    </entity>
    <entity entity-name="ArtifactAuthzRecordCond" package-name="moqui.security.authz">
        <field name="artifactAuthzId" type="id" is-pk="true"/>
        <field name="artifactAuthzCondSeqId" type="id" is-pk="true"/>
        <field name="fieldName" type="text-medium"/>
        <field name="operatorEnumId" type="id"/>
        <field name="condValue" type="text-long">
            <description>Use ${} syntax to expand from variable in artifact's context.</description>
        </field>
        <relationship type="one" title="ComparisonOperator" related-entity-name="Enumeration">
            <key-map field-name="operatorEnumId" related-field-name="enumId"/>
        </relationship>
    </entity>
    <view-entity entity-name="ArtifactAuthzCheckView" package-name="moqui.security.authz">
        <member-entity entity-alias="AAZ" entity-name="ArtifactAuthz"/>
        <member-entity entity-alias="AGM" entity-name="ArtifactGroupMember" join-from-alias="AAZ">
            <key-map field-name="artifactGroupId"/>
        </member-entity>
        <member-entity entity-alias="AAR" entity-name="ArtifactAuthzRecord" join-from-alias="AAZ" join-optional="true">
            <key-map field-name="artifactAuthzId"/>
        </member-entity>
        <alias entity-alias="AAZ" name="userGroupId"/>
        <alias entity-alias="AAZ" name="artifactAuthzId"/>
        <alias entity-alias="AAZ" name="authzActionEnumId"/>
        <alias entity-alias="AAZ" name="authzTypeEnumId"/>
        <alias entity-alias="AAZ" name="authzServiceName"/>
        <alias entity-alias="AGM" name="artifactName"/>
        <alias entity-alias="AGM" name="artifactTypeEnumId"/>
        <alias entity-alias="AGM" name="nameIsPattern"/>
        <alias entity-alias="AGM" name="inheritAuthz"/>
        <alias entity-alias="AAR" name="viewEntityName"/>
    </view-entity>

    <!-- ========================================================= -->
    <!-- moqui.security.tarpit -->
    <!-- ========================================================= -->

    <entity entity-name="ArtifactTarpit" package-name="moqui.security.tarpit">
        <description>If an artifact in the group specified is accessed by any user in the UserGroup maxHitsCount
            times in maxHitsDuration seconds then the user/artifact will be blocked for tarpitDuration seconds.
        </description>
        <field name="userGroupId" type="id" is-pk="true"/>
        <field name="artifactGroupId" type="id" is-pk="true"/>
        <field name="maxHitsCount" type="number-integer"/>
        <field name="maxHitsDuration" type="number-integer"/>
        <field name="tarpitDuration" type="number-integer"/>
        <relationship type="one" related-entity-name="UserGroup"/>
        <relationship type="one" related-entity-name="ArtifactGroup"/>
    </entity>
    <view-entity entity-name="ArtifactTarpitCheckView" package-name="moqui.security.authz">
        <member-entity entity-alias="ATP" entity-name="ArtifactTarpit"/>
        <member-entity entity-alias="AGM" entity-name="ArtifactGroupMember" join-from-alias="ATP">
            <key-map field-name="artifactGroupId"/>
        </member-entity>
        <alias entity-alias="ATP" name="userGroupId"/>
        <alias entity-alias="ATP" name="maxHitsCount"/>
        <alias entity-alias="ATP" name="maxHitsDuration"/>
        <alias entity-alias="ATP" name="tarpitDuration"/>
        <alias entity-alias="AGM" name="artifactName"/>
        <alias entity-alias="AGM" name="artifactTypeEnumId"/>
        <alias entity-alias="AGM" name="nameIsPattern"/>
    </view-entity>
    <entity entity-name="ArtifactTarpitLock" package-name="moqui.security.tarpit" cache="false">
        <description>Deny access to the artifact for the user until releaseDateTime is reached.</description>
        <field name="artifactTarpitLockId" type="id" is-pk="true"/>
        <field name="userId" type="id"/>
        <field name="artifactName" type="text-long"/>
        <field name="artifactTypeEnumId" type="id"/>
        <field name="releaseDateTime" type="date-time"/>
        <relationship type="one-nofk" related-entity-name="UserAccount">
            <description>No FK in order to allow externally authenticated users.</description>
        </relationship>
        <relationship type="one" title="ArtifactType" related-entity-name="Enumeration">
            <key-map field-name="artifactTypeEnumId"/>
        </relationship>
    </entity>

    <!-- ========================================================= -->
    <!-- moqui.security.user -->
    <!-- ========================================================= -->

    <entity entity-name="UserAccount" package-name="moqui.security.user">
        <field name="userId" type="id-very-long" is-pk="true"/>
        <field name="username" type="text-long" enable-audit-log="true">
            <description>The username used along with the password to login</description>
        </field>
        <field name="userFullName" type="text-medium"><description>User's first, middle, last, etc name</description></field>
        <field name="currentPassword" type="text-long"/>
        <field name="passwordSalt" type="text-medium"/>
        <field name="passwordHashType" type="text-short"/>
        <field name="passwordSetDate" type="date-time"/>
        <field name="passwordHint" type="text-long"/>
        <field name="hasLoggedOut" type="text-indicator"/>
        <field name="disabled" type="text-indicator"/>
        <field name="disabledDateTime" type="date-time"/>
        <field name="successiveFailedLogins" type="number-integer"/>
        <field name="requirePasswordChange" type="text-indicator"/>
        <field name="currencyUomId" type="id"/>
        <field name="locale" type="text-short"/>
        <field name="timeZone" type="id-long"/>
        <field name="externalUserId" type="id-very-long"/>
        <field name="emailAddress" type="text-long">
            <description>The email address to use for forgot password emails and other system messages.</description>
        </field>
        <relationship type="one" title="Currency" related-entity-name="Uom">
            <key-map field-name="currencyUomId"/>
        </relationship>
        <!-- NOTE: both username and emailAddress must be unique -->
        <index name="USERACCT_USERNAME" unique="true"><index-field name="username"/></index>
        <index name="USERACCT_EMAILADDR" unique="true"><index-field name="emailAddress"/></index>
    </entity>
    <entity entity-name="UserGroup" package-name="moqui.security.user">
        <field name="userGroupId" type="id" is-pk="true"/>
        <field name="description" type="text-long"/>
    </entity>
    <entity entity-name="UserGroupMember" package-name="moqui.security.user" cache="true">
        <field name="userGroupId" type="id" is-pk="true"/>
        <field name="userId" type="id-very-long" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <relationship type="one" related-entity-name="UserGroup"/>
        <relationship type="one-nofk" related-entity-name="UserAccount">
            <description>No FK in order to allow externally authenticated users.</description>
        </relationship>
    </entity>
    <entity entity-name="UserGroupPermission" package-name="moqui.security.user" cache="true">
        <field name="userGroupId" type="id" is-pk="true"/>
        <field name="userPermissionId" type="id-very-long" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <relationship type="one" related-entity-name="UserGroup"/>
        <relationship type="one-nofk" related-entity-name="UserPermission">
            <description>No FK in order to allow arbitrary permissions (ie not pre-configured).</description>
        </relationship>
    </entity>
    <view-entity entity-name="UserPermissionCheck" package-name="moqui.security.user">
        <member-entity entity-alias="UGM" entity-name="UserGroupMember"/>
        <member-entity entity-alias="UGP" entity-name="UserGroupPermission" join-from-alias="UGM" >
            <key-map field-name="userGroupId"/>
        </member-entity>
        <alias name="userId" entity-alias="UGM"/>
        <alias name="userPermissionId" entity-alias="UGP"/>
        <alias name="groupFromDate" entity-alias="UGM" field="fromDate"/>
        <alias name="groupThruDate" entity-alias="UGM" field="thruDate"/>
        <alias name="permissionFromDate" entity-alias="UGP" field="fromDate"/>
        <alias name="permissionThruDate" entity-alias="UGP" field="thruDate"/>
    </view-entity>
    <entity entity-name="UserLoginHistory" package-name="moqui.security.user" cache="never">
        <field name="userId" type="id-very-long" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <field name="visitId" type="id"/>
        <field name="passwordUsed" type="text-medium" encrypt="true"/>
        <field name="successfulLogin" type="text-indicator"/>
        <relationship type="one-nofk" related-entity-name="UserAccount">
            <description>No FK in order to allow externally authenticated users.</description>
        </relationship>
    </entity>
    <entity entity-name="UserPasswordHistory" package-name="moqui.security.user" cache="never">
        <field name="userId" type="id-very-long" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="password" type="text-medium" encrypt="true"/>
        <relationship type="one-nofk" related-entity-name="UserAccount">
            <description>No FK in order to allow externally authenticated users.</description>
        </relationship>
    </entity>
    <entity entity-name="UserPermission" package-name="moqui.security.user">
        <field name="userPermissionId" type="id-very-long" is-pk="true"/>
        <field name="description" type="text-long"/>
    </entity>
    <entity entity-name="UserPreference" package-name="moqui.security.user">
        <description>Use this entity for user-specific preferences (or properties). For default preferences use userId="_NA_".</description>
        <field name="userId" type="id-very-long" is-pk="true"/>
        <field name="preferenceKey" type="text-long" is-pk="true"/>
        <field name="preferenceValue" type="text-long"/>
        <relationship type="one-nofk" related-entity-name="UserAccount">
            <description>No FK in order to allow externally authenticated users.</description>
        </relationship>
        <relationship type="one-nofk" title="UserPreferenceKey" related-entity-name="Enumeration">
            <description>No FK because any key can be used whether or not there is an Enumeration record for it.</description>
            <key-map field-name="preferenceKey"/>
        </relationship>
    </entity>
    <entity entity-name="UserScreenTheme" package-name="moqui.security.user" authorize-skip="view">
        <field name="userId" type="id-very-long" is-pk="true"/>
        <field name="screenThemeTypeEnumId" type="id" is-pk="true"/>
        <field name="screenThemeId" type="id"/>
        <relationship type="one-nofk" related-entity-name="UserAccount">
            <description>No FK in order to allow externally authenticated users.</description>
        </relationship>
        <relationship type="one" title="ScreenThemeType" related-entity-name="Enumeration">
            <key-map field-name="screenThemeTypeEnumId"/>
        </relationship>
        <relationship type="one" related-entity-name="ScreenTheme"/>
    </entity>
</entities>
