<?xml version="1.0" encoding="UTF-8"?>
<!--
This is free and unencumbered software released into the public domain.
For specific language governing permissions and limitations refer to
the LICENSE.md file or http://unlicense.org
-->
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-1.5.xsd">

    <service verb="send" noun="EmailTemplate" authenticate="anonymous-view" type="script"
             location="classpath://org/moqui/impl/sendEmailTemplate.groovy">
        <description>NOTE: this service is meant for internal use and authentication is not required. Do not export or
            allow this service to be called remotely.</description>
        <implements service="org.moqui.EmailServices.send#EmailTemplate"/>
    </service>

    <service verb="poll" noun="EmailServer" authenticate="false" type="script" transaction-timeout="600"
             location="classpath://org/moqui/impl/pollEmailServer.groovy">
        <description>
            Poll an email server (IMAP or POP3) to receive messages. Each new message is processed using
            the Email-ECA rules. Messages are flagged as seen (if supported). Messages are deleted if the storeDelete
            flag is set on the moqui.basic.email.EmailServer record.

            This is meant to be called as a scheduled service, run as often as you want to poll for new messages on a
            particular server (configured in the corresponding moqui.basic.email.EmailServer record).
        </description>
        <in-parameters>
            <parameter name="emailServerId" required="true"/>
        </in-parameters>
    </service>
    
    <service verb="save" noun="EcaEmailMessage">
        <implements service="org.moqui.EmailServices.process#EmailEca"/>
        <in-parameters>
            <parameter name="statusId" default-value="ES_RECEIVED"/>
        </in-parameters>
        <out-parameters><parameter name="emailMessageId"/></out-parameters>
        <actions>
            <service-call name="create#moqui.basic.email.EmailMessage" out-map="context"
                in-map="[sentDate:fields.sentDate, receivedDate:fields.receivedDate, statusId:statusId,
                    subject:fields.subject, body:fields.bodyPartList?.getAt(0),
                    fromAddress:fields.from, toAddresses:fields.toList?.toString(),
                    ccAddresses:fields.ccList?.toString(), bccAddresses:fields.bccList?.toString(),
                    messageId:headers.get('Message-ID')]"/>
        </actions>
    </service>
</services>
