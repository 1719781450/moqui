<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->

<project name="Moqui Main Build" default="build" basedir=".">
    <property environment="env"/>
    <property name="version" value="1.0-preview3"/>
    <property name="tomcat.home" value="../apache-tomcat-7.0.6"/>

    <target name="init">
        <!-- just a place holder for now -->
    </target>

    <!-- ========== clean targets ========== -->
    <target name="clean-all" description="Calls all other clean targets">
        <antcall target="clean-db"/>
        <antcall target="clean-log"/>
        <antcall target="clean-xtra"/>
        <antcall target="clean"/>
    </target>

    <target name="clean-db" description="Clean all DB data (Derby) under runtime/db">
        <delete verbose="on" includeemptydirs="true">
            <fileset dir="runtime/db/derby" includes="**/*">
                <exclude name="derby.properties"/>
            </fileset>
        </delete>
    </target>

    <target name="clean-log" description="Clean all logs in runtime/log">
        <delete verbose="on">
            <fileset dir="runtime/log" includes="*"/>
        </delete>
    </target>

    <target name="clean-xtra" description="Clean all other files like .rej, .orig, etc.">
        <delete verbose="on">
            <fileset dir="." includes="**/.nbattrs,**/*~,**/.#*,**/.DS_Store,**/*.rej,**/*.orig"/>
        </delete>
    </target>

    <target name="clean">
        <subant target="clean">
            <filelist dir="." files="framework/build.xml"/>
        </subant>
        <delete verbose="on">
            <fileset file="moqui-${version}.war"/>
        </delete>
    </target>

    <!-- ========== build targets ========== -->
    <target name="build" depends="init">
        <subant inheritall="true">
            <filelist dir="." files="framework/build.xml"/>
        </subant>
    </target>

    <!-- ========== javadoc targets ========== -->
    <target name="docs" depends="init">
        <subant target="docs">
            <filelist dir="." files="framework/build.xml"/>
        </subant>
    </target>

    <!-- ========== war targets ========== -->
    <target name="war" depends="build">
        <war destfile="moqui-${version}.war" webxml="framework/webapp/WEB-INF/web.xml">
            <!-- no html/etc webapp files for now: <fileset dir="html"/> -->
            <lib dir="framework/api/lib">
                <exclude name="winstone-0.9.10.jar"/>
            </lib>
            <lib dir="framework/impl/lib"/>
            <lib dir="framework/build/lib"/>
            <classes file="MoquiInit.properties"/>

            <!-- copy the start files, setup the manifest for war acting like executable jar -->
            <fileset dir="framework/build/start/classes"/>
            <file file="framework/api/lib/winstone-0.9.10.jar"/>
            <manifest>
                <attribute name="Manifest-Version" value="1.0"/>
                <attribute name="Implementation-Title" value="Moqui Start"/>
                <attribute name="Implementation-Vendor" value="Moqui Framework"/>
                <attribute name="Main-Class" value="MoquiStart"/>
            </manifest>
        </war>
    </target>
    <target name="war-tomcat" depends="war">
        <delete verbose="on" failonerror="false" dir="${tomcat.home}/runtime"/>
        <delete verbose="on" failonerror="false" dir="${tomcat.home}/webapps/moqui"/>
        <delete verbose="on" failonerror="false" file="${tomcat.home}/webapps/moqui.war"/>
        <delete verbose="on" failonerror="false">
            <fileset dir="${tomcat.home}/logs" includes="*"/>
        </delete>
        <copy file="moqui-${version}.war" tofile="${tomcat.home}/webapps/moqui.war"/>
    </target>

    <target name="run" depends="war" description="Run Moqui Web server with Embedded Winstone (run the executable war file)">
        <java jar="moqui-${version}.war" fork="true">
            <jvmarg value="-Xmx256M"/>
            <jvmarg value="-XX:MaxPermSize=64m"/>
        </java>
    </target>
    <target name="run-staging" depends="war" description="Run Moqui Web server in production mode">
        <java jar="moqui-${version}.war" fork="true">
            <jvmarg value="-Xms128M"/>
            <jvmarg value="-Xmx256M"/>
            <jvmarg value="-XX:MaxPermSize=64m"/>
            <jvmarg value="-Dmoqui.conf=conf/staging/MoquiStagingConf.xml"/>
        </java>
    </target>
    <target name="run-production" depends="war" description="Run Moqui Web server in production mode">
        <java jar="moqui-${version}.war" fork="true">
            <jvmarg value="-Xms128M"/>
            <jvmarg value="-Xmx256M"/>
            <jvmarg value="-XX:MaxPermSize=64m"/>
            <jvmarg value="-Dmoqui.conf=conf/production/MoquiProductionConf.xml"/>
        </java>
    </target>
    <target name="load" depends="war" description="Run Moqui data loader (run the executable war file with -load)">
        <java jar="moqui-${version}.war" fork="true">
            <arg value="-load"/>
        </java>
    </target>
</project>
